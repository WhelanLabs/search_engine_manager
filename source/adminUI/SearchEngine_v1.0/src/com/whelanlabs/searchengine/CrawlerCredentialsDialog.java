/*
 * CrawlerCredentialsDialog.java
 *
 * Created on March 28, 2009, 4:55 PM
 */

package com.whelanlabs.searchengine;

import java.awt.Color;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JPasswordField;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author  john
 */
public class CrawlerCredentialsDialog extends javax.swing.JDialog {
   private String appRootDirectory;

    /** Creates new form CrawlerCredentialsDialog */
    public CrawlerCredentialsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public CrawlerCredentialsDialog(java.awt.Frame parent, boolean modal, String appRootDir) {
        super(parent, modal);
        initComponents();
        appRootDirectory = appRootDir;
        setValues();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel1 = new javax.swing.JLabel();
      jPanel1 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      credentialsTable = new javax.swing.JTable();
      credentialsAddRowButton = new javax.swing.JButton();
      credentialsDeleteRowsButton = new javax.swing.JButton();
      jPanel2 = new javax.swing.JPanel();
      jSeparator1 = new javax.swing.JSeparator();
      credentialsCancelButton = new javax.swing.JButton();
      credentialsOkButton = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.whelanlabs.searchengine.AdminUI.class).getContext().getResourceMap(CrawlerCredentialsDialog.class);
      setTitle(resourceMap.getString("Form.title")); // NOI18N
      setName("Form"); // NOI18N

      jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
      jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
      jLabel1.setName("jLabel1"); // NOI18N

      jPanel1.setName("jPanel1"); // NOI18N

      jScrollPane1.setName("jScrollPane1"); // NOI18N

      credentialsTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {
            {"www.whelanlabs.com", null, "JoeUser", "password"}
         },
         new String [] {
            "Host (blank for all)", "Port (blank for all)", "User Name", "Password"
         }
      ) {
         Class[] types = new Class [] {
            java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
         };

         public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
         }
      });
      credentialsTable.setName("credentialsTable"); // NOI18N
      jScrollPane1.setViewportView(credentialsTable);
      credentialsTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("credentialsTable.columnModel.title0")); // NOI18N
      credentialsTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("credentialsTable.columnModel.title1")); // NOI18N
      credentialsTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("credentialsTable.columnModel.title2")); // NOI18N
      credentialsTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("credentialsTable.columnModel.title3")); // NOI18N

      credentialsAddRowButton.setText(resourceMap.getString("credentialsAddRowButton.text")); // NOI18N
      credentialsAddRowButton.setMaximumSize(new java.awt.Dimension(105, 23));
      credentialsAddRowButton.setMinimumSize(new java.awt.Dimension(105, 23));
      credentialsAddRowButton.setName("credentialsAddRowButton"); // NOI18N
      credentialsAddRowButton.setPreferredSize(new java.awt.Dimension(140, 23));
      credentialsAddRowButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            credentialsAddRowButtonActionPerformed(evt);
         }
      });

      credentialsDeleteRowsButton.setText(resourceMap.getString("credentialsDeleteRowsButton.text")); // NOI18N
      credentialsDeleteRowsButton.setMaximumSize(new java.awt.Dimension(105, 23));
      credentialsDeleteRowsButton.setMinimumSize(new java.awt.Dimension(105, 23));
      credentialsDeleteRowsButton.setName("credentialsDeleteRowsButton"); // NOI18N
      credentialsDeleteRowsButton.setPreferredSize(new java.awt.Dimension(140, 23));
      credentialsDeleteRowsButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            credentialsDeleteRowsButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addComponent(credentialsAddRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(credentialsDeleteRowsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(credentialsDeleteRowsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(credentialsAddRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
      );

      jPanel2.setName("jPanel2"); // NOI18N

      jSeparator1.setName("jSeparator1"); // NOI18N

      credentialsCancelButton.setText(resourceMap.getString("credentialsCancelButton.text")); // NOI18N
      credentialsCancelButton.setMaximumSize(new java.awt.Dimension(105, 23));
      credentialsCancelButton.setMinimumSize(new java.awt.Dimension(105, 23));
      credentialsCancelButton.setName("credentialsCancelButton"); // NOI18N
      credentialsCancelButton.setPreferredSize(new java.awt.Dimension(105, 23));
      credentialsCancelButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            credentialsCancelButtonActionPerformed(evt);
         }
      });

      credentialsOkButton.setText(resourceMap.getString("credentialsOkButton.text")); // NOI18N
      credentialsOkButton.setMaximumSize(new java.awt.Dimension(105, 23));
      credentialsOkButton.setMinimumSize(new java.awt.Dimension(105, 23));
      credentialsOkButton.setName("credentialsOkButton"); // NOI18N
      credentialsOkButton.setPreferredSize(new java.awt.Dimension(105, 23));
      credentialsOkButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            credentialsOkButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                  .addComponent(credentialsOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(credentialsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE))
            .addContainerGap())
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 9, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(credentialsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(credentialsOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
         .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

private void credentialsAddRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsAddRowButtonActionPerformed
   DefaultTableModel tableModel = (DefaultTableModel)credentialsTable.getModel();
   tableModel.addRow(new Object[]{"NewHost", 80, "", ""});
}//GEN-LAST:event_credentialsAddRowButtonActionPerformed

private void credentialsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsCancelButtonActionPerformed
  setVisible(false);
}//GEN-LAST:event_credentialsCancelButtonActionPerformed

private void credentialsOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsOkButtonActionPerformed
   setVisible(false);

   String host = null;
   String port = null;
   String username = null;
   String password = null;
   ArrayList entries = new ArrayList();

   int count = credentialsTable.getRowCount();

   StringBuffer httpclientAuth = new StringBuffer();
   StringBuffer authProperties = new StringBuffer();
   httpclientAuth.append("<auth-configuration>\n");
   authProperties.append("numEntries=" + Integer.toString(count) + "\n");

   for (int i = 0; i < count; i++) {
      // HashMap entry = new HashMap();
      host = (String) credentialsTable.getValueAt(i, 0);
      Object portObj = credentialsTable.getValueAt(i, 1);
      if(null == portObj) {
         port = "";
      }
      else {
         port = portObj.toString();
      }
      
      username = (String) credentialsTable.getValueAt(i, 2);
      password = (String) credentialsTable.getValueAt(i, 3);
      
      if (!("".equals(username))) {
         httpclientAuth.append("<credentials username=\"" + username + "\" password=\"" + password + "\">\n");
         httpclientAuth.append("<authscope ");
         if (!("".equals(host))) {
            httpclientAuth.append(" host=\"" + host + "\" ");
         }
         if (!("".equals(port))) {
            httpclientAuth.append(" port=\"" + port + "\" ");
         }
         httpclientAuth.append("/>\n");
         httpclientAuth.append("</credentials>\n");
      }

      authProperties.append("host." + Integer.toString(i) + "=" + host + "\n");
      authProperties.append("port." + Integer.toString(i) + "=" + port + "\n");
      authProperties.append("username." + Integer.toString(i) + "=" + username + "\n");
      authProperties.append("password." + Integer.toString(i) + "=" + password + "\n");
   }
   httpclientAuth.append("</auth-configuration>\n");
   Logger.getLogger(AdminUIView.class.getName()).log(Level.INFO, "httpclientAuth = " + httpclientAuth);
   TemplateUtils.setFileText(httpclientAuth.toString(), appRootDirectory + "/cygwin/whelanlabs/searchengine/nutch/conf/httpclient-auth.xml");
   TemplateUtils.setFileText(authProperties.toString(), appRootDirectory + "/config/credentials.properties");
}//GEN-LAST:event_credentialsOkButtonActionPerformed

private void credentialsDeleteRowsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credentialsDeleteRowsButtonActionPerformed
   int[] selectedRows = credentialsTable.getSelectedRows();
   DefaultTableModel tableModel = (DefaultTableModel) credentialsTable.getModel();
   for(int i = selectedRows.length-1; i >=0; i--)
   {
      tableModel.removeRow(selectedRows[i]);
   }
   
}//GEN-LAST:event_credentialsDeleteRowsButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CrawlerCredentialsDialog dialog = new CrawlerCredentialsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton credentialsAddRowButton;
   private javax.swing.JButton credentialsCancelButton;
   private javax.swing.JButton credentialsDeleteRowsButton;
   private javax.swing.JButton credentialsOkButton;
   private javax.swing.JTable credentialsTable;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JSeparator jSeparator1;
   // End of variables declaration//GEN-END:variables

   private void setValues() {
      Properties properties = new Properties();
      int size = 0;
      try {
         String filename = appRootDirectory + "/config/credentials.properties";
         properties.load(new FileInputStream(filename));
      } catch (IOException ex) {
         Logger.getLogger(AdminUIView.class.getName()).log(Level.SEVERE, null, ex);
      }

      DefaultTableModel tableModel = (DefaultTableModel) credentialsTable.getModel();
      int numRows = credentialsTable.getRowCount();
      String sizeString = properties.getProperty("numEntries");
      if (null != sizeString) {
         size = Integer.valueOf(sizeString);
      }

      for (int i = 0; i < size; i++) {
         if (i >= numRows) {
            tableModel.addRow(new Object[]{"", 0, "", ""});
         }
         credentialsTable.setValueAt(properties.getProperty("host." + Integer.toString(i)), i, 0);
         credentialsTable.setValueAt(properties.getProperty("port." + Integer.toString(i)), i, 1);
         credentialsTable.setValueAt(properties.getProperty("username." + Integer.toString(i)), i, 2);
         credentialsTable.setValueAt(properties.getProperty("password." + Integer.toString(i)), i, 3);
      }
   }



}
